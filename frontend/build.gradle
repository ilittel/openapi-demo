plugins {
    id 'base'
    id 'org.openapi.generator' version '5.1.0'
    id 'com.github.node-gradle.node' version '2.2.4'
}

version '1.0-SNAPSHOT'
group 'org.openapidemo'
description 'OpenAPI demo front-end'

repositories {
    mavenCentral()
}

openApiGenerate {
    // For all generators and options, see https://github.com/OpenAPITools/openapi-generator/blob/master/docs/generators.md
    generatorName = 'typescript-angular'
    // NOTE: Double quotes below are important!
    inputSpec = "${rootDir}/api/ilittel-Products-1.0.0-unresolved.yaml"
    outputDir = "${projectDir}/src/openapi"
    globalProperties = [
        // Notes on the generation properties below:
        // 1) An empty value means 'generate all'.
        // 2) If you specify one, the others will NOT be generated.
        apis: '',
        models: '',
        supportingFiles: ''
    ]
}

node {
  version = '10.21.0'
  npmVersion = '6.14.5'
  download = true
}

task cleanGeneratedCode(type: Delete) {
    delete openApiGenerate.outputDir
}

task buildAngularApp(type: NpxTask) {
  dependsOn npmInstall
  command = 'ng'
  args = ['build', '--prod']
  inputs.files('package.json', 'package-lock.json', 'angular.json', 'tsconfig.json', 'tsconfig.app.json')
  inputs.dir('src')
  outputs.dir('dist')
}

task packageAngularApp(type: Zip) {
  dependsOn buildAngularApp
  archiveBaseName = 'frontend'
  archiveExtension = 'jar'
  from('dist/frontend') {
    // Path inside JAR where output will be placed.
    into 'static'
  }
}

task npmStart(type: NpxTask) {
  command = 'npm'
  args = ['start']
}

clean {
  delete packageAngularApp.outputs
  delete buildAngularApp.outputs
}

configurations {
  npmArtifacts
}

artifacts {
  npmArtifacts(packageAngularApp) {
    type 'jar'
  }
}

configurations.default.extendsFrom(configurations.npmArtifacts)

tasks.assemble.dependsOn(tasks.openApiGenerate, tasks.packageAngularApp)
tasks.clean.dependsOn(tasks.cleanGeneratedCode)
